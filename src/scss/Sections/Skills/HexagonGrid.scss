// Styling for hexagon grid of skills icons

@import "../../Theme";

// Get number of hexagons per row based on screen size
@function hex-per-row($size) {
    @if ($size == mobile) {
        @return 3;
    }
    @else if ($size == portrait) {
        @return 6;
    }
    @else if($size == landscape) {
        @return 8;
    }
    @else if($size == desktop) {
        @return 8;
    }
    @else if($size == big) {
        @return 8;
    }
}

// Create offset for each row of hexagons
@mixin create-offset($hex-per-row) {
    $offset: percentage(1 / $hex-per-row / 4);
    @for $i from 1 through $hex-per-row {
        &:nth-child(#{$hex-per-row * 2}n + #{$i}) {
            left: -$offset;
        }
    }
    @for $i from ($hex-per-row + 1) through ($hex-per-row * 2) {
        &:nth-child(#{$hex-per-row * 2}n + #{$i}) {
            left: $offset;
        }
    }
}

// Create sizings for hexagon container
@mixin skill-container-size($size) {
    $hex: hex-per-row($size);
    min-width: percentage(1 / $hex);
    padding-top: percentage(1 / $hex * 0.866025404);
    @include create-offset($hex);
}

// @function calc-padding-hack($hex-per-row) {
//     @return percentage(100 / 86.6025403784 * (1 / $hex-per-row) - 0.01);
// }

section#skills {
    // Container
    ul.hex-grid {
        list-style: none;
        width: 100%;
        margin: 0 auto;
        padding: 0 1.5rem;
        display: flex;
        flex-direction: row;
        flex-wrap: wrap;
        justify-content: start;
    }

    // Fade-in animation
    @keyframes skill-fade-in {
        from {
            opacity: 0;
        }
        to {
            opacity: 1;
        }
    }

    // A single skill in the list
    .skill {
        animation: skill-fade-in 1s;
        position: relative;
        flex: 0;
        height: 0px;

        @include for-mobile {
            @include skill-container-size(mobile);
        }

        @include for-tablet-portrait-up {
            @include skill-container-size(portrait);
        }

        @include for-tablet-landscape-up {
            @include skill-container-size(landscape);
        }

        // Container for hexagon
        .container {
            color: $bg-primary;
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            padding: 0 0.1rem;

            >svg {
                // Display block for correct sizing
                display: block;
                transition: color 0.3s, opacity 0.3s;
            }

            // Fixes two Internet Explorer bugs in calculating heights and widths
            @include for-ie {
                height: 0px;
                margin-bottom: 5px;
                padding-top: 110%;

                >svg.hexagon {
                    position: absolute;
                    top: 0;
                    left: 0;
                    width: 100%;
                    height: 100%;
                }
            }

            // Center icon in container
            >svg.icon {
                color: $bg-primary;
                position: absolute;
                width: 75%;
                padding: 10%;
                top: 50%;
                left: 50%;
                z-index: 1;
                transform: translate(-50%, -50%) translateZ(0) scale(1.0, 1.0);
                -webkit-user-drag: none;
                user-select: none;
            }


            // Hexagon fades away on hover
            &:hover, &:active, &:focus {
                >svg.hexagon {
                    opacity: 0;
                }

                >svg.icon {
                    color: inherit;
                }
            }
        }
    }
}