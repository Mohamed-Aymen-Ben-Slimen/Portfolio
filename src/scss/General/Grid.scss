// Flexible grid framework

@import "../Theme.scss";

// Number of columns to include
$grid-columns: 12;
$gutter: 1rem;

// Minimum width for each size to take effect
$grid-sizes: 
    sm 0px,
    md 600px,
    lg 900px;

// Row for a grid
.grid-row,
.grid-row-padding {
    display: flex;
    flex: 0 1 auto;
    flex-direction: row;
    flex-wrap: wrap;
    margin: 0;
    text-align: left;

    // Reverse direction of row
    &.reverse {
        flex-direction: row-reverse;
    }

    @each $duple in $grid-sizes {
        $name: nth($duple, 1);
        $size: nth($duple, 2);
    
        @media screen and (min-width: $size) {
            // Left-justify columns
            &.#{$name}-start {
                justify-content: flex-start;
                text-align: start;
            }
        
            // Right-justify columns
            &.#{$name}-end {
                justify-content: flex-end;
                text-align: end;
            }
        
            // Center-justify columns
            &.#{$name}-center {
                justify-content: center;
                text-align: center;
            }
        }
    }
}

// Add padding between elements of a row
.grid-row-padding {
    padding: 0 $gutter;

    >.grid-col {
        padding: 0 $gutter;
    }
}

// A single column, must be modified by other classes
.grid-col {
    display: flex;
    width: 100%;
}

@each $duple in $grid-sizes {
    $name: nth($duple, 1);
    $size: nth($duple, 2);

    @media screen and (min-width: $size) {
        .grid-col {
            // All sizes
            @for $i from 1 through $grid-columns {
                &.#{$name}#{$i} {
                    flex-basis: 100% / $grid-columns * $i;
                    max-width: 100% / $grid-columns * $i;
                }
            }

            // Base column with no sizing
            &.#{$name} {
                flex-grow: 1;
                flex-basis: 0;
                max-width: 100%;
            }

            // Align content to top of column
            &.#{$name}-top {
                align-items: flex-start;
            }

            // Align content to bottom of column
            &.#{$name}-bottom {
                align-items: flex-end;
            }
            
            // Align content to center of column
            &.#{$name}-middle {
                align-items: center;
            }
        
            // Force column to be first in row
            &.#{$name}-first {
                order: -1;
            }

            // Force column to be last in row
            &.#{$name}-last {
                order: 1;
            }

            // Add a bottom margin to the column
            &.#{$name}-margin-bottom {
                margin-bottom: 1.5rem;
            }

            // Add side padding to column
            &.#{$name}-padding {
                padding: 0 $gutter;
            }
        }
    }
}

